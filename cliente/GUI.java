/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente;

import java.awt.event.ItemEvent;
import java.io.File;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

/**
 *
 * @author Héctor
 */
public class GUI extends javax.swing.JFrame {

    private static GUI gui;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonPlayPause = new javax.swing.JButton();
        botonSiguiente = new javax.swing.JButton();
        botonAnterior = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        sliderVolumen = new javax.swing.JSlider();
        comboTipos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaCanciones = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AudioLab");
        setName("Panel"); // NOI18N

        botonPlayPause.setLabel("Play/Pause");
        botonPlayPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonPlayPauseMouseClicked(evt);
            }
        });

        botonSiguiente.setLabel("Siguiente");
        botonSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonSiguienteMouseClicked(evt);
            }
        });

        botonAnterior.setLabel("Anterior");
        botonAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonAnteriorMouseClicked(evt);
            }
        });

        jProgressBar1.setStringPainted(true);

        sliderVolumen.setName(""); // NOI18N

        comboTipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Canciones", "Emisoras" }));
        comboTipos.setName("listadoOrigenes"); // NOI18N
        comboTipos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTiposItemStateChanged(evt);
            }
        });

        listaCanciones.setToolTipText("Lista de Canciones");
        jScrollPane1.setViewportView(listaCanciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(comboTipos, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(sliderVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(botonAnterior)
                        .addGap(18, 18, 18)
                        .addComponent(botonPlayPause)
                        .addGap(18, 18, 18)
                        .addComponent(botonSiguiente)
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAnterior)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonSiguiente)
                        .addComponent(botonPlayPause))
                    .addComponent(sliderVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        botonPlayPause.getAccessibleContext().setAccessibleName("botonPlayPause");
        botonSiguiente.getAccessibleContext().setAccessibleName("botonSiguiente");
        botonAnterior.getAccessibleContext().setAccessibleName("botonAnterior");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonPlayPauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonPlayPauseMouseClicked
        // TODO add your handling code here:
            //reproductor.resume();
            //reproductor.pause();
    }//GEN-LAST:event_botonPlayPauseMouseClicked

    private void botonSiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonSiguienteMouseClicked
        // TODO add your handling code here:
            //reprodutor.siguiente();
    }//GEN-LAST:event_botonSiguienteMouseClicked

    private void botonAnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAnteriorMouseClicked
        // TODO add your handling code here:
            //reproductor.anterior();
    }//GEN-LAST:event_botonAnteriorMouseClicked

    private void comboTiposItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTiposItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED){
            String item = (String)evt.getItem();
            DefaultListModel dlm = new DefaultListModel();
            if(item.equals("Canciones")){
               // File f = new File ("C:/Users/Héctor/Música/DTM(TG)GreenDaRevRadi/DTM(TG)GreenDaRevRadi/Green Day - Revolution Radio (2016)");
               // for(int i = 0; i< f.listFiles().length; i++){
               //    dlm.addElement(f.listFiles()[i].getName());
               // }
                gui.listaCanciones.setModel(dlm);
                //Llamar a getCanciones
                //gui.listaCanciones.setModel((DefaultListModel)negocio.getCanciones());
                gui.comboTipos.addItem("HOLA");
            }
            else if(item.equals("Emisoras"))
                //Llamar a getEmisoras
                gui.comboTipos.addItem("ADIOS");
        }
    }//GEN-LAST:event_comboTiposItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                gui = new GUI();
                gui.setVisible(true);    
                //Cambiar esta siguiente línea por el método pertinente para recoger canciones
                //DefaultListModel canciones = (DefaultListModel) negocio.getCanciones();
                DefaultListModel def = new DefaultListModel();

                for(int i = 0; i < 20 ; ++i){
                    def.addElement("Cancion "  + i);
                   }
                gui.listaCanciones.setModel(def);
                }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAnterior;
    private javax.swing.JButton botonPlayPause;
    private javax.swing.JButton botonSiguiente;
    private javax.swing.JComboBox<String> comboTipos;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaCanciones;
    private javax.swing.JSlider sliderVolumen;
    // End of variables declaration//GEN-END:variables
}
