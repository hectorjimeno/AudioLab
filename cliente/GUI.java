/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente;

import java.awt.event.ItemEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author HÃ©ctor
 */
public class GUI extends javax.swing.JFrame {

    private Reproductor player;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        player = new Reproductor();
        this.inicializarLista("Canciones");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonPlayPause = new javax.swing.JButton();
        botonSiguiente = new javax.swing.JButton();
        botonAnterior = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        sliderVolumen = new javax.swing.JSlider();
        comboTipos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaCanciones = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AudioLab");
        setName("Panel"); // NOI18N
        setResizable(false);

        botonPlayPause.setLabel("Play/Pause");
        botonPlayPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonPlayPauseMouseClicked(evt);
            }
        });

        botonSiguiente.setLabel("Siguiente");
        botonSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonSiguienteMouseClicked(evt);
            }
        });

        botonAnterior.setLabel("Anterior");
        botonAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonAnteriorMouseClicked(evt);
            }
        });

        jProgressBar1.setStringPainted(true);

        sliderVolumen.setName(""); // NOI18N

        comboTipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Canciones", "Emisoras" }));
        comboTipos.setName("listadoOrigenes"); // NOI18N
        comboTipos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboTiposItemStateChanged(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setHorizontalScrollBar(null);

        listaCanciones.setToolTipText("Lista de Canciones");
        listaCanciones.setAutoscrolls(false);
        listaCanciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaCancionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaCanciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(comboTipos, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(sliderVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(botonAnterior)
                        .addGap(18, 18, 18)
                        .addComponent(botonPlayPause)
                        .addGap(18, 18, 18)
                        .addComponent(botonSiguiente)
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAnterior)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonSiguiente)
                        .addComponent(botonPlayPause))
                    .addComponent(sliderVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        botonPlayPause.getAccessibleContext().setAccessibleName("botonPlayPause");
        botonSiguiente.getAccessibleContext().setAccessibleName("botonSiguiente");
        botonAnterior.getAccessibleContext().setAccessibleName("botonAnterior");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonPlayPauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonPlayPauseMouseClicked
        // TODO add your handling code here:
        player.resumePause();
    }//GEN-LAST:event_botonPlayPauseMouseClicked

    private void botonSiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonSiguienteMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            cambiarIndiceLista("Siguiente");
        }
    }//GEN-LAST:event_botonSiguienteMouseClicked

    private void botonAnteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAnteriorMouseClicked

        if (evt.getButton() == MouseEvent.BUTTON1) {
            cambiarIndiceLista("Anterior");
        }
    }//GEN-LAST:event_botonAnteriorMouseClicked

    private void cambiarIndiceLista(String direccion) {
        int seleccion = this.listaCanciones.getSelectedIndex();
        switch (direccion) {
            case "Anterior":
                if (seleccion != -1) {
                    if (seleccion != 0) {
                        this.listaCanciones.setSelectedIndex(seleccion - 1);
                    } else {
                        this.listaCanciones.setSelectedIndex(this.listaCanciones.getModel().getSize() - 1);
                    }
                    try{
                            player.play(this.listaCanciones.getSelectedValue());
                        }
                        catch(IOException ex){
                            ex.printStackTrace();
                        }
                }
                break;
            case "Siguiente":
                if (seleccion != -1) {
                    if (seleccion != this.listaCanciones.getModel().getSize() - 1) {
                        this.listaCanciones.setSelectedIndex(seleccion + 1);
                    } else {
                        this.listaCanciones.setSelectedIndex(0);
                    }
                    try{
                            player.play(this.listaCanciones.getSelectedValue());
                        }
                        catch(IOException ex){
                            ex.printStackTrace();
                        }
                }
                break;
        }
    }
    
    private void comboTiposItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboTiposItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String item = (String) evt.getItem();
            inicializarLista(item);
        }
    }//GEN-LAST:event_comboTiposItemStateChanged

    private void listaCancionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaCancionesMouseClicked
        // TODO add your handling code here:
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int index = list.locationToIndex(evt.getPoint());
            if (index >= 0) {
                Object o = list.getModel().getElementAt(index);
                try{
                    player.play(o.toString());
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 
        }
    }//GEN-LAST:event_listaCancionesMouseClicked

    
    private void inicializarLista(String item){
        DefaultListModel dlm = new DefaultListModel();
            ArrayList<String> lista = new ArrayList<>();
            if (item.equals("Canciones")) {
                lista = player.getLista("Canciones");
            } else if (item.equals("Emisoras")) //Llamar a getEmisoras
            {
                lista = player.getLista("Emisoras");
            }
            
            //Hay que hacer esto para pasar el ArrayList a una DefaultListModel
            for(int i = 0, n= lista.size(); i<n; i++)
                dlm.addElement(lista.get(i));
            this.listaCanciones.setModel(dlm);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUI gui = new GUI();
                gui.setVisible(true);
                //Cambiar esta siguiente lÃ­nea por el mÃ©todo pertinente para recoger canciones
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAnterior;
    private javax.swing.JButton botonPlayPause;
    private javax.swing.JButton botonSiguiente;
    private javax.swing.JComboBox<String> comboTipos;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaCanciones;
    private javax.swing.JSlider sliderVolumen;
    // End of variables declaration//GEN-END:variables
}
